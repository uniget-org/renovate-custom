name: docker-desktop

on:
  schedule:
  - cron: "47 3 * * *"
  push:
    branches:
    - main
    paths:
    - .github/workflows/docker-desktop.yml
  workflow_dispatch:

concurrency:
  group: docker-desktop

jobs:

  desktop:
    name: docker-desktop
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      version: ${{ steps.fetch.outputs.version }}
    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: gojq

    - name: Fetch
      id: fetch
      run: |
        VERSION="$(
            curl --silent --show-error --location --fail "https://github.com/docker/docs/raw/main/content/manuals/desktop/release-notes.md" \
            | grep '{{< desktop-install all=true' \
            | head -n 1 \
            | sed -E 's/^.+version="([^"]+)".+$/\1/'
        )"
        if test -z "${VERSION}"; then
            echo "Failed to fetch latest tag and extract version from GitHub"
            exit 1
        fi
        echo "Got version <${VERSION}>"

        echo "version=${VERSION}" >>${GITHUB_OUTPUT}

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        allowUpdates: true
        name: "docker-desktop v${{ steps.fetch.outputs.version }}"
        tag: docker-desktop/${{ steps.fetch.outputs.version }}
        draft: false
        prerelease: false

  init:
    name: docker-init
    needs: desktop
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: docker-init

    - name: Install tool
      run: |
        docker_desktop_version="${{ needs.desktop.outputs.version }}" bash -x -e ./helper/usr/local/bin/install-docker-init.sh .

    - name: Fetch version
      id: fetch
      run: |
        VERSION="$(
            ./libexec/docker/cli-plugins/docker-init init --version \
            | grep ^Version \
            | cut -dv -f2
        )"
        if test -z "${VERSION}"; then
            echo "Unable to get version" >&2
            exit 1
        fi
        echo "Got version ${VERSION}"
        echo "version=${VERSION}" >>${GITHUB_OUTPUT}

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        allowUpdates: true
        name: "docker-init v${{ steps.fetch.outputs.version }}"
        tag: docker-init/${{ steps.fetch.outputs.version }}
        draft: false
        prerelease: false
        body: |
          docker-desktop@${{ needs.desktop.outputs.version }}

  debug:
    name: docker-debug
    needs: desktop
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uniget
      uses: uniget-org/uniget-action@main
      with:
        prefix: helper
        tools: docker-debug

    - name: Install tool
      run: |
        docker_desktop_version="${{ needs.desktop.outputs.version }}" bash -x -e ./helper/usr/local/bin/install-docker-debug.sh .

    - name: Fetch version
      id: fetch
      run: |
        VERSION="$(
            ./libexec/docker/cli-plugins/docker-debug debug --version \
            | grep ^Version \
            | cut -d' ' -f2
        )"
        if test -z "${VERSION}"; then
            echo "Unable to get version" >&2
            exit 1
        fi
        echo "Got version ${VERSION}"
        echo "version=${VERSION}" >>${GITHUB_OUTPUT}

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        allowUpdates: true
        name: "docker-debug v${{ steps.fetch.outputs.version }}"
        tag: docker-debug/${{ steps.fetch.outputs.version }}
        draft: false
        prerelease: false
        body: |
          docker-desktop@${{ needs.desktop.outputs.version }}