python-3.12-check:
  image: registry.gitlab.com/uniget-org/images/ubuntu:rolling
  variables:
    # renovate: datasource=github-releases depName=indygreg/python-build-standalone versioning=loose
    INDYGREG_PYTHON_BUILD_STANDALONE_VERSION: 20241016
  script:
  - |
    # Find cpython-${PYTHON_VERSION}+${version}-${arch}-unknown-linux-musl-install_only.tar.gz
    VERSION="$(
        curl --silent --show-error --location --fail \
            --url "https://api.github.com/repos/indygreg/python-build-standalone/releases/tags/${INDYGREG_PYTHON_BUILD_STANDALONE_VERSION}" \
        | jq --raw-output '.assets[].name' \
        | grep -E -- '-x86_64-unknown-linux-musl-install_only.tar.gz$' \
        | sed -E 's/^cpython-([^+]+)\+.+$/\1/' \
        | grep -P '^3\.12\.\d+$' \
        | sort -Vr \
        | head -n 1
    )"
    if test -z "${VERSION}"; then
        echo "Failed to fetch latest tag and extract version from GitHub"
        exit 1
    fi
    echo "Got version <${VERSION}>"

    echo "version=${VERSION}.${INDYGREG_PYTHON_BUILD_STANDALONE_VERSION}" >>variables.env
  artifacts:
    reports:
      dotenv: variables.env

python-3.12-release:
  needs:
  - python-3.12-check
  image: registry.gitlab.com/gitlab-org/release-cli:v0.19.0
  script:
  - |
    echo "### Releasing python-3.12 v${VERSION}"
    if release-cli get --tag-name python-3.12/${VERSION}; then
        echo "    Already exists"
        exit 0

    else
        release-cli create \
            --name "python-3.12 v${VERSION}" \
              --description "Custom release of python-3.12 v${VERSION}" \
              --tag-name "python-3.12/${VERSION}" \
              --ref "${CI_COMMIT_SHA}"
    fi
