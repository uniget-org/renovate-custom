spec:
  inputs:
    name:
      type: string
      description: The name of the tool
    prerequisites:
      type: string
      description: The prerequisites to build the tool (space separated ubuntu packages)
      default: ""
    test:
      type: string
      description: Run some commands to test the commands below
      default: ""
    command:
      type: string
      description: The command to determine the version of the tool (duplicate all backslashes)
---
$[[ inputs.name ]]-check:
  rules:
  - if: $SCHEDULED_PIPELINE == "true"
  image: registry.gitlab.com/uniget-org/images/ubuntu:rolling
  before_script:
  - apt-get update
  - apt-get install -y $[[ inputs.prerequisites ]]
  script:
  - |
    set -e -x

    echo "###################################################################"
    echo "### Testing"
    $[[ inputs.test ]]

    echo "###################################################################"
    echo "### Checking $[[ inputs.name ]] version"
    VERSION="$(
        $[[ inputs.command ]]
    )"
    if test -z "${VERSION}"; then
        echo "Failed to fetch latest tag and extract version from GitHub"
        exit 1
    fi
    echo "Got version <${VERSION}>"

    echo "VERSION=${VERSION}" >>variables.env
  artifacts:
    reports:
      dotenv: variables.env

$[[ inputs.name ]]-release:
  rules:
  - if: $SCHEDULED_PIPELINE == "true"
  needs:
  - $[[ inputs.name ]]-check
  image: registry.gitlab.com/gitlab-org/release-cli:v0.19.0
  script:
  - |
    echo "### Releasing $[[ inputs.name ]] v${VERSION}"
    if release-cli get --tag-name $[[ inputs.name ]]/${VERSION}; then
        echo "    Already exists"
        exit 0

    else
        release-cli create \
            --name "$[[ inputs.name ]] v${VERSION}" \
              --description "Custom release of $[[ inputs.name ]] v${VERSION}" \
              --tag-name "$[[ inputs.name ]]/${VERSION}" \
              --ref "${CI_COMMIT_SHA}"
    fi
